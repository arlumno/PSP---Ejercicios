package tesTing;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;

public class ejemplos {
	public static void main(String[] args) throws IOException {
		try {
			
			//ejemplo4();
			
			ejemplo8();
		} catch (Exception e) {
			// TODO: handle exception
		}

	}

	public static void ejemplo2() throws Exception {

		try {
			Process p = new ProcessBuilder("CMD", "/C", "DIR").start();
			InputStream is = p.getInputStream();
			int c;
			while ((c = is.read()) != -1) {
				System.out.print((char) c);
			}
			is.close();

			int exitVal;

			exitVal = p.waitFor();
			System.out.println("Valor de salida: " + exitVal);
		} catch (Exception e) {
			// TODO: handle exception

		}
	}

	public static void ejemplo3() throws Exception {

		// File directorio = new File("C:\\Users\\a20armandocb\\Mi unidad\\CsDam
		// Arlumno\\PSP\\proyectos eclipse\\tesTing\\bin\\");
		File directorio = new File(".\\bin");

		if (directorio.exists()) {
			System.out.println("existe");
		} else {
			System.out.println("NO existe");
		}
		ProcessBuilder pb = new ProcessBuilder("java", "tesTing.prueba02");
		pb.directory(directorio);
		System.out.printf("Directorio: %s%n", pb.directory());
		Process p = pb.start();
		try {
			InputStream is = p.getInputStream();

			int c;
			while ((c = is.read()) != -1) {
				System.out.print((char) c);
			}
			is.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void actividad1_4() throws Exception {

		File directorio = new File(".\\bin");

		ProcessBuilder pb = new ProcessBuilder("java", "tesTing.LeerNombre", "Pepito");
		// ProcessBuilder pb = new ProcessBuilder("java", "tesTing.LeerNombre");

		pb.directory(directorio);
		System.out.printf("Directorio: %s%n", pb.directory());
		Process p = pb.start();
		try {
			InputStream is = p.getInputStream();

			int c;
			while ((c = is.read()) != -1) {
				System.out.print((char) c);
			}
			is.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

		try {
			int salida = p.waitFor();
			System.out.println("Salida: " + salida);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public static void actividad1_5() throws Exception {

		File directorio = new File(".\\bin");
		System.out.println("Iniciando..");

		//ProcessBuilder pb = new ProcessBuilder("CMD", "/C","DIRR");
		ProcessBuilder pb = new ProcessBuilder("java", "tesTing.LeerNombre222");

		pb.directory(directorio);

		Process p = pb.start();
		try {

			int c;
			
			InputStream is = p.getErrorStream();
			while ((c = is.read()) != -1) {
				System.out.print((char) c);
			}
			is.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("error");
		}
	}
	public static void ejemplo4() throws Exception {

		
		Process p = new ProcessBuilder("CMD", "/C","DATE").start();
		
		OutputStream os = p.getOutputStream();
		os.write(("14-10-21").getBytes());
		os.flush();//limpia
		
		try {
			InputStream is = p.getInputStream();
			int c;			
			while ((c = is.read()) != -1) {
				System.out.print((char) c);
			}
			is.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		int exiVal;
		try {
			exiVal = p.waitFor();
			System.out.println("Valor de salida: " + exiVal);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void actividad1_6() throws Exception {

		//iniciar proceso
		File directorio = new File(".\\bin");
		ProcessBuilder pb = new ProcessBuilder("java", "tesTing.EjemploLectura");
		pb.directory(directorio);
		Process p = pb.start();
		
		//enviar datos al proceso
		OutputStream salida = p.getOutputStream();
		System.out.println("");
		salida.write("33\n".getBytes());
		salida.write("4\n".getBytes());
		salida.flush();
		
		//recoger salida del proceso
		InputStream entrada = p.getInputStream();
		int c;
		while ((c = entrada.read()) != -1) {
			System.out.print((char) c);
		}
		entrada.close();
		
				
		//System.out.println(p.waitFor());
	}

	public static void ejemplo6() throws Exception {

		ProcessBuilder pb = new ProcessBuilder();
		Map entorno = pb.environment();
		System.out.println("Variables de entorno:");
		System.out.println(entorno);
		
		pb = new ProcessBuilder("java", "tesTing.LeerNombre", "Pepito");
		
		List comandos = pb.command();
		System.out.println("Comandos disponibles:");
		for(int i = 0; i < comandos.size(); i++) {
			System.out.println(comandos.get(i));			
		}
		
		pb = new ProcessBuilder("CMD", "/C","DIR");
		
		try {
			Process p = pb.start();
			
			InputStream is = p.getInputStream();
			int c;			
			while ((c = is.read()) != -1) {
				System.out.print((char) c);
			}
			is.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
	}

	public static void ejemplo8() throws Exception {

		
		ProcessBuilder pb = new ProcessBuilder("CMD");
		
		String rutaBase = "src\\tesTing\\";
		File instruccionesEntrada = new File(rutaBase+"instrucciones.bat");
		if(!instruccionesEntrada.exists()) {
			System.out.println("El archivo (" + instruccionesEntrada.getAbsolutePath() + ") no existe");
		}
		File resultadoSalida = new File(rutaBase+"resultado.txt");
		File errores = new File(rutaBase+"errores.txt");
		
		pb.redirectInput(ProcessBuilder.Redirect.from(instruccionesEntrada));
		pb.redirectOutput(ProcessBuilder.Redirect.appendTo(resultadoSalida));
		pb.redirectError(ProcessBuilder.Redirect.to(errores));
		Process p = pb.start();
		
	}

}


